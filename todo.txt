TODO :
-generation de l'ensemble des points du pareto de reference
    (en gerant les parametres, (le pas))

-calcul de toutes les distances euclidiennes entre un point du pareto trouvé
      et le pareto de reference et selection de la plus courte
      https://www.hindawi.com/journals/ddns/2011/569784/fig4/

-calcul des hypervolumes
-comparaison des hypervolumes
-representation de la comparaison au fur et a mesure des optimisations

Dans plus longtemps:
-evaluer le temps de resolution par rapport à la variation des parametres
-passer à plusieurs dimensions

A lire : https://stackoverflow.com/questions/14535690/number-of-decision-variables-vs-objective-space-dimension
        https://en.wikipedia.org/wiki/Mathematical_optimization#Optimization_problems
        https://en.wikipedia.org/wiki/Multi-objective_optimization
        https://en.wikipedia.org/wiki/Test_functions_for_optimization


Regarder dans Benchmark la liste des problems single-objectif



ATTENTION : Pour résoudre l'erreur suivante :

Traceback (most recent call last):
  File "/home/nakashita/Nextcloud/TPE NSGAII/TPE-NSGAII/nsga.py", line 271, in <module>
    resolve_problem(param,list_var)
  File "/home/nakashita/Nextcloud/TPE NSGAII/TPE-NSGAII/nsga.py", line 183, in resolve_problem
    max_generations=nmb_gen)
  File "/usr/lib/python3.7/site-packages/inspyred/ec/emo.py", line 147, in evolve
    return ec.EvolutionaryComputation.evolve(self, generator, evaluator, pop_size, seeds, maximize, bounder, **args)
  File "/usr/lib/python3.7/site-packages/inspyred/ec/ec.py", line 434, in evolve
    initial_fit = evaluator(candidates=initial_cs, args=self._kwargs)
  File "/usr/lib/python3.7/site-packages/inspyred/benchmarks.py", line 508, in evaluator
    fit = [0.5 * reduce(lambda x,y: x*y, c[:self.objectives-1]) * (1 + gval)]
NameError: name 'reduce' is not defined


la ligne suivante a été ajoutée dans le fichier benchmarks.py :

from functools import reduce




CR Réunion 18 février:
  - On remplace la variation des paramètres en fonction du temps par la variation en fonction de nmb de génération

  - On fixe des paramètres de ref (P_mut ... /génération) adaptés à chaque pb .. (On voulait déjà le faire)
    Il ne reste plus qu'à trouver les valeurs, le systeme est déjà là

  - Faire des test avec des fonction encore plus complexes (A voir)

  - Trouver de la biblio sur les pb DTLZx (Science direct) (Chercher DTLZ dans le site)

  - Multi-obj : tracer l'évolution du front de pareto (Pas trop de fronts -> reste lisible)

  - Sur quel critère l'algo se stop t il ? (Variation minime de l'hypervolume ?)

  - Faire varier le type de croisement

  - Faire des figures travaillées

  - Faire des tests avec NSGAIII, il apporte quoi ?

  - yarpit.com (A voir)

TODO 21/03:
 - multi auto et single auto, faire des graphes (résultat en fonction du nombre de génération)

 - les % pour atteinte d'objectif

 - on met le temps parceque c'est ce que les gens recherchent dans la vrai vie

 - est ce que cet algo s'arrete quand ça bouge plus (on pourrait le voir avec le temps)
